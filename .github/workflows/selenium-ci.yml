name: Manual Test - Single Login Flow

on:
  # 1. TRIGGER: This block defines WHEN the workflow runs.
  workflow_dispatch: 
    # Having only 'workflow_dispatch' means it MUST be run manually by you, 
    # preventing accidental runs on every code push.

jobs:
  run-superadmin-login:
    # The job is named 'run-superadmin-login'
    runs-on: ubuntu-latest # The type of virtual machine (Runner) to use

    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4
        # This is a pre-built action that pulls your code from the GitHub repository onto the runner machine.

      - name: 2. Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: 3. Install Google Chrome
        # This command ensures the required Chrome browser executable is present on the Linux runner.
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: 4. Build Project and Dependencies
        # mvn clean install: Compiles your Java code (Launch.java, LaunchSessionBrowser.java) 
        # and downloads all dependencies listed in your pom.xml (Selenium, TestNG).
        run: mvn clean install -DskipTests 

      # ----------------------------------------------------------------------
      # PERSISTENT BROWSER EXECUTION
      # ----------------------------------------------------------------------
      - name: 5. Launch Persistent Browser (Base.LaunchSessionBrowser)
        run: |
          echo "Starting Base.LaunchSessionBrowser in the background..."
          # This is the crucial command for persistence:
          # nohup: Stands for "no hang up." It ensures the process continues running even if the shell session detaches.
          # java -cp ... Base.LaunchSessionBrowser: Executes your compiled Java file.
          # &: Puts the command into the background, allowing the YAML to immediately move to the next step.
          nohup java -cp target/classes:$(echo ~/.m2/repository/org/seleniumhq/selenium/*/*/*/*.jar | tr ' ' ':') Base.LaunchSessionBrowser > browser.log 2>&1 &
          
          echo "Waiting 10 seconds for Chrome to open on port 53478..."
          sleep 10
        
      # ----------------------------------------------------------------------
      # TEST EXECUTION
      # ----------------------------------------------------------------------
      - name: 6. Run TestNG Suite (SuperAdminLoginTest only)
        # This step starts the tests, and Base.Launch.java attaches to the browser started in Step 5.
        # -Dsurefire.suiteXmlFiles: Tells the Maven Surefire plugin to use your specific XML file.
        run: |
          echo "Executing single TestNG class, attaching via Base.Launch"
          mvn test -Dsurefire.suiteXmlFiles=testng.xml
          
      # ----------------------------------------------------------------------
      # CLEANUP (GUARANTEED)
      # ----------------------------------------------------------------------
      - name: 7. Cleanup Persistent Processes
        if: always() 
        # CRUCIAL: The 'if: always()' condition ensures this step runs regardless of whether Step 6 passed or failed.
        run: |
          echo "Killing background processes to free port 53478..."
          # pkill -f: Finds and terminates a process based on the command line used to start it.
          pkill -f "Base.LaunchSessionBrowser"
          pkill -f "chromedriver"
          
          echo "Cleanup complete."